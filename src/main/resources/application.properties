spring.application.name=post
spring.profiles.active=${PRODUCTION:dev}
# Database connection properties
spring.datasource.url=${JDBC_STAGING_DATABASE_URL:jdbc:postgresql://localhost:5432/be-post}
spring.datasource.username=${JDBC_STAGING_DATABASE_USERNAME:postgres}
spring.datasource.password=${JDBC_STAGING_DATABASE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver
# JPA properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Hibernate dialect for PostgreSQL with PostGIS
spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect
# Debug purposes
logging.level.org.springframework.orm.jpa=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#S3
aws.s3.bucket-name=safetypin
aws.s3.region=ap-southeast-2
# JWT
jwt.secret=${JWT_SECRET_KEY:wjii9rguinj3k4kiwedsiuonj32jiiew99ij324rjifsnf}
management.endpoints.web.exposure.include=health,prometheus
management.prometheus.metrics.export.enabled=true

# Auth Service Configuration
# Use a base URL property
be-auth=http://localhost:8080
# If your auth service is deployed elsewhere, use that URL:
# be-auth=http://safetypin.ppl.cs.ui.ac.id